Index: git/qtbrowser.cpp
===================================================================
--- git.orig/qtbrowser.cpp
+++ git/qtbrowser.cpp
@@ -26,6 +26,18 @@
 #include <QtWidgets>
 #endif
 
+/*
+   By default qtbrowser depends on qtwebkit extensions which are only available
+   in Metrological qtwebkit. Make use of these extensions conditional to support
+   building against upstream qtwebkit (which is still required since
+   Metrological qtwebkit doesn't currently support VirtualBox vbox32 builds).
+   Warning: Testing QT_VERSION is a temporary hack.
+*/
+#if (QT_VERSION == QT_VERSION_CHECK(5, 4, 1))
+/* Enable Metrological extensions */
+#define WEBSECURITY
+#endif
+
 #include <QNetworkProxy>
 #include <QNetworkReply>
 #include <QNetworkAccessManager>
@@ -59,7 +71,9 @@ void help(void) {
     "  --javascript=<on|off>          JavaScript execution (default: on)            \n"
     "  --private-browsing=<on|off>    Private browsing (default: off)               \n"
     "  --spatial-navigation=<on|off>  Spatial Navigation (default: off)             \n"
+#if defined (WEBSECURITY)
     "  --websecurity=<on|off>         WebSecurity (default: off)                    \n"
+#endif
     "  --inspector=<port>             Inspector (default: disabled)                 \n"
     "  --max-cached-pages=<n>         Maximum pages in cache (default: 1)           \n"
     "  --pixmap-cache=<n>             Pixmap Cache size in MB (default: 20)         \n"
@@ -113,7 +127,9 @@ int main(int argc, char *argv[]) {
     settings->setAttribute(QWebSettings::WebAudioEnabled, true);
     settings->setAttribute(QWebSettings::PluginsEnabled, false);
     settings->setAttribute(QWebSettings::DeveloperExtrasEnabled, true);
+#if defined (WEBSECURITY)
     settings->setAttribute(QWebSettings::WebSecurityEnabled, false);
+#endif
     settings->setAttribute(QWebSettings::LocalContentCanAccessRemoteUrls, true);
     settings->setAttribute(QWebSettings::LocalStorageEnabled, true);
     settings->enablePersistentStorage(path);
@@ -190,8 +206,10 @@ int main(int argc, char *argv[]) {
             webSettingAttribute(QWebSettings::PrivateBrowsingEnabled, value);
         } else if (strncmp("--spatial-navigation", s, nlen) == 0) {
             webSettingAttribute(QWebSettings::SpatialNavigationEnabled, value);
+#if defined (WEBSECURITY)
         } else if (strncmp("--websecurity", s, nlen) == 0) {
             webSettingAttribute(QWebSettings::WebSecurityEnabled, value);
+#endif
         } else if (strncmp("--inspector", s, nlen) == 0) {
             inspectorPort = (unsigned int)atoi(value);
         } else if (strncmp("--max-cached-pages", s, nlen) == 0) {
